[tool.poetry]
name = "celery-sqlalchemy-scheduler"
version = "0.3.2"
description = "A Scheduler Based SQLalchemy For Celery"
authors = [
    "AngelLiang (original) <yannanxiu@126.com>",
    "m4rc3lh3 (since 3.0.0) <me@example.com>"
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/m4rc3l-h3/celery-sqlalchemy-scheduler"
repository = "https://github.com/m4rc3l-h3/celery-sqlalchemy-scheduler"
documentation = "https://github.com/m4rc3l-h3/celery-sqlalchemy-scheduler"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    'Intended Audience :: Developers',
    'Topic :: Software Development :: Libraries',
]
packages = [
    {include = "celery_sqlalchemy_scheduler", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.12"
celery = "^5.4.0"
sqlalchemy = "^2.0.30"
pytz = "^2024.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.4.7"
python-semantic-release = "^9.8.0"
testfixtures = "^8.2.0"
parameterized = "^0.9.0"
coverage = "^7.5.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
command_line = "-m unittest"

[tool.coverage.report]
include = ["src/*.py"]
show_missing = true

[tool.semantic_release]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "m4rc3lhe <me@example.com>"

# Commit structure convention:
# build: Changes that affect the build system or external dependencies
# ci: Changes to our CI configuration files and scripts
# docs: Documentation only changes
# feat: A new feature
# fix: A bug fix
# perf: A code change that improves performance
# style: A code change that only affects code quality (incl. pylint, flake8)
# refactor: A code change that neither fixes a bug nor adds a feature
# test: Adding missing tests or correcting existing tests

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

# https://www.codeac.io/documentation/pylint-configuration.html
[tool.pylint.main]
ignore-patterns = [ ".*_pg\\.py" ]
recursive = true
[tool.pylint.similarities]
min-similarity-lines = 12

[tool.ruff]
extend-exclude = [
    "*_pg.py"
]
force-exclude = true
line-length = 100
indent-width = 4
target-version = "py38"
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"datetime.datetime" = "dt"

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
